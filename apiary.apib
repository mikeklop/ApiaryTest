FORMAT: 1A
HOST: http://aaeinblr01828d.ww888.siemens.net:8443/amelie/webapi/km

# Annotation API

Annotation is an API allowing clients to get templates and recommendations based on different contexts and types.

## SECO keywords Collection [/secokeywords]

### Get provided SECO card keywords [GET]

+ Response 401
    
    + Headers

            WWW-Authenticate: Basic realm="protected"

+ Request

    + Headers
    
            Authorization: Basic 12345
        
+ Response 200 (application/json)

        [
            {
                "secokeywords":
                [
                    {
                        "standard": ["Embrace und Extend", "One Way Street"]
                    },
                    {
                        "proprietary": ["Embrace und Extend", "One Way Street"]
                    }, 
                    {
                        "partner": ["Gate Keeper", "Pay for Influence"]
                    },
                    {
                        "contribution": ["Gate Keeper"]
                    },
                    {
                        "partner contribution": ["Gate Keeper"]
                    },
                    {
                        "add-on": ["Gate Keeper"]
                    },
                    {
                        "plug-in": ["Gate Keeper"]
                    },
                    {
                        "sandbox": ["Sandbox"]
                    },
                    {
                        "isolation": ["Sandbox"]
                    },
                    {
                        "restricted access": ["Sandbox"]
                    },
                    {
                        "partner management": ["Pay for Influence"]
                    },
                    {
                        "membership": ["Pay for Influence"]
                    },
                    {
                        "deployment": ["Rollout Waves"]
                    },
                    {
                        "rollout": ["Rollout Waves"]
                    },
                    {
                        "foundation": ["Open up"]
                    },
                    {
                        "consortium": ["Open up"]
                    },
                    {
                        "open": ["Open up"]
                    },
                    {
                        "life cycle": ["Release Train"]
                    },
                    {
                        "release": ["Release Train"]
                    },
                    {
                        "release train": ["Release Train"]
                    },
                    {
                        "interface": ["Immutable interfaces"]
                    },
                    {
                        "interfaces": ["Immutable interfaces"]
                    },
                    {
                        "immutable interfaces": ["Immutable interfaces"]
                    },
                    {
                        "compatibility": ["App Detection by Platform"]
                    },
                    {
                        "public information": ["Questions & Answers"]
                    },
                    {
                        "app awareness": ["App Detection by Platform"]
                    },
                    {
                        "questions": ["Questions & Answers"]
                    },
                    {
                        "answers": ["Questions & Answers"]
                    },
                    {
                        "socumentation": ["Questions & Answers"]
                    },
                    {
                        "user group": ["User Group"]
                    },
                    {
                        "quality assurance": ["User Group"]
                    },
                    {
                        "quality": ["User Group"]
                    },
                    {
                        "special interest group": ["User Group"]
                    }
                ]                
            }
        ]

        
+ Response 401 (text/plain)

        Anonymous access to AMELIE Rest API is not allowed
    
+ Response 403 (text/plain)

        Cannot find the requested resource here

## Categories Collection [/categories]

### Get provided categories [GET]

+ Response 401
    
    + Headers

            WWW-Authenticate: Basic realm="protected"

+ Request

    + Headers
    
            Authorization: Basic 12345
        
+ Response 200 (application/json)

        [
            {
                "categories": 
                [
                    {
                        "id": 1,
                        "name": "Software architecture description"
                    },
                    {
                        "id": 2,
                        "name": "Requirements"
                    },
                    {
                        "id": 3,
                        "name": "Use Cases"
                    },
                    {
                        "id": 4,
                        "name": "user stories"
                    }
                ]
            }
        ]
        
+ Response 401 (text/plain)

        Anonymous access to AMELIE Rest API is not allowed
    
+ Response 403 (text/plain)

        Cannot find the requested resource here
        
## Experts collection [/experts?expertise=]

### Returns a collection of software experts [GET]

If successful, this method returns a collection of Expert resources in the response body.

+ Request

    + Headers
    
            Authorization: Basic 12345

+ Parameters

    + expertise: Software+Ecosystem   Parameter which indicates that the complete list of experts have to be filtered based on expertise. API returns the experts which match the expertise parameter. If unspecified, API returns complete list of experts
    
+ Response 200 (application/json)
        
        [
            {
                "contact": "+49 (9131) 7-30483",
                "dept": " CT RTC SSI ADM-DE",
                "email": "@siemens.com",
                "expertise": [
                    "Software Architecture",
                    "Architecture Definition and Management",
                    "Component",
                    "Architecture Vision",
                    "Architecture Approach",
                    "Design",
                    "Reference Architecture",
                    "Architecture Review",
                    "Quality feedback loop",
                    "Architecture Improvement",
                    "Forces",
                    "Architecture Analysis",
                    "Architecture Process",
                    "Architecture View",
                    "Domain Scoping",
                    "System Scoping",
                    "Product Line Engineering",
                    "Traceable Architecture Violation Management",
                    "Baseline architecture",
                    "Strategic Design",
                    "Tactical Design",
                    "Software Ecosystems"
                ],
                "imageurl": "https://132.186.214.9:8443/amelie/resources/images/experts/schoenberger_a.jpg",
                "initials": null,
                "name": "Andreas Schoenberger"
            },
            {
                "contact": "+49 (173) 2560707",
                "dept": "CT RDA SSI",
                "email": "christopher.drexler@siemens.com",
                "expertise": [
                    "Software Architecture",
                    "Architecture Definition and Management",
                    "Motivation",
                    "Architecture Vision",
                    "Design",
                    "Leading without power",
                    "Reference Architecture",
                    "Architecture Review",
                    "Architecture Process",
                    "Technical Architecture",
                    "Product Line Engineering",
                    "Leadership",
                    "Strategic Design",
                    "Tactical Design",
                    "Software Ecosystems"
                ],
                "imageurl": "https://132.186.214.9:8443/amelie/resources/images/experts/drexler_c.jpg",
                "initials": null,
                "name": "Christopher Drexler"
            }
        ]

## Knowlegde Methods collection [/knowledgemethods?searchString=]

### Returns the list of knowledge methods containing the given search string or all, if search string is omitted [GET]

If successful, this method returns a collection of KnowledgeMethod resource in the response body.

+ Request

    + Headers
    
            Authorization: Basic 12345

+ Parameters

    + searchString: Model+Based    Parameter which indicates the search string to look for. API returns the knowledge methods which match the search string. If unspecified, API returns complete list of knowledge methods.
    
+ Response 200 (application/json)
        
        [
            {
                "description": "Model-based architecture simulation combines a model based architecture development approach with a simulation method",
                "experts": [],
                "name": "Model-Based Architecture Simulation",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_architecture_simulation/index.htm"
            },
            {
                "description": "Model-based architecture development approaches provide ways to handle the complexity of modern system and software architectures",
                "experts": [],
                "name": "Model-Based Architecture Development",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_architecture_development/index.htm"
            },
            {
                "description": "Model-based architecture simulation combines a model based architecture development approach with a simulation method",
                "experts": [],
                "name": "Model-Based Architecture Simulation",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_architecture_simulation/index.htm"
            },
            {
                "description": "The approach identifies whether or not independent applications that run on the same hardware receive enough resources for meeting their performance goals at all times",
                "experts": [],
                "name": "Performance Engineering for Container-based Ecosystems",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/performance_engineering_for_container-based_ecosystems/index.htm"
            },
            {
                "description": "Model-based approaches provide ways to handle the complexity of modern system and software developments",
                "experts": [],
                "name": "Seamless Software and System Modeling",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/seamless_software_and_system_modeling/index.htm"
            },
            {
                "description": "For Product Line Engineering a model-based approach helps to fully gain the benefits of Product Line Engineering by providing a consistent and structured basis for analysis",
                "experts": [],
                "name": "Model-Based Product Line Engineering",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_product_line_engineering/index.htm"
            },
            {
                "description": "Model-driven development approaches provide ways to handle the complexity of modern system and software developments",
                "experts": [],
                "name": "Model Driven Development",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model_driven_development/index.htm"
            },
            {
                "description": "For Product Line Engineering a model-based approach helps to fully gain the benefits of Product Line Engineering by providing a consistent and structured basis for analysis",
                "experts": [],
                "name": "Model-Based Product Line Engineering",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_product_line_engineering/index.htm"
            },
            {
                "description": "The Software Ecosystem (SECO) modeling appraoch allows for structured capturing of ecosystems and their contained roles/actors and corresponding value flows",
                "experts": [
                    {
                        "contact": null,
                        "dept": "CT RDA SSI SDT-IN",
                        "email": "@siemens.com",
                        "expertise": [
                            "Design thinking",
                            "Usability"
                        ],
                        "imageurl": null,
                        "initials": null,
                        "name": "Bettina Maisch"
                    }
                ],
                "name": "Software Ecosystem Modeling",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/software_ecosystem_modeling/index.htm"
            },
            {
                "description": "Model-based development approaches provide ways to handle the complexity of modern system and software systems",
                "experts": [],
                "name": "Model Quality Assurance",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model_quality_assurance/index.htm"
            },
            {
                "description": "Model-based architecture development approaches provide ways to handle the complexity of modern system and software architectures",
                "experts": [],
                "name": "Model-Based Architecture Development",
                "url": "http://md1330uc.ww002.siemens.net/amelie_dev1/view_extern/model-based_architecture_development/index.htm"
            }
        ]

## Knowlegde Methods Insert [/knowledgemethods]

### Inserts a new knowledge method resource into the AMELIE database [POST]

If successful, this method returns a KnowledgeMethod resource in the response body.

+ Request

    + Headers
    
            Authorization: Basic 12345

    + Body
    
            [
                {
                    "description": "The awesomest knowledge method ever.",
                    "experts": 
                    [
                        {
                            "contact": "9740123456",
                            "dept": "CT RDA SSI SDT-IN",
                            "email": "elroy.dsilva@siemens.com",
                            "expertise": 
                            [
                                "Design thinking",
                                "Usability"
                            ],
                            "imageurl": null,
                            "initials": null,
                            "name": "Elroy Dsilva"
                        }
                    ],
                    "name": "Awesome Knowledge Method - REST TEST",
                    "url": "https://www.awesomekm.net"
                }
            ]
            
+ Response 200 (application/json)
    
        [    
           {
            "name": "Awesome Knowledge Method - REST TEST",
            "description": "The awesomest knowledge method ever.",
            "url": "https://www.awesomekm.net"
            "experts": 
                [
                    {
                        "contact": "9740123456",
                        "dept": "CT RDA SSI SDT-IN",
                        "email": "elroy.dsilva@siemens.com",
                        "expertise": 
                            [
                                "Design thinking",
                                "Usability"
                            ],
                        "imageurl": null,
                        "initials": null,
                        "name": "Elroy Dsilva"
                    }
                ]
            }
        ]
        
## Template Collection [/templates]

## DocTypes Collection [/doctypes]

### Get provided document types [GET]
             
If successful, this method returns a collection of different document types, eg. 'Interface specification'.

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "Interface specification"
            },
            {
                "id": 2,
                "name": "Feature Specification"
            },
            {
                "id": 3,
                "name": "Solution Architecture"
            },
            {
                "id": 4,
                "name": "Use case"
            }
        ]

## Document Type Template Collection [/doctypetemplates]

### Get document templates related to the id of the given document type  [GET /doctypetemplates?docTypeId=]

If successful, this method returns a collection of different document type templates based on the id of the given document type, eg. 1 = 'Interface specification'.

+ Parameters
    
    + docTypeId: 1
    
+ Response 200 (application/json)
        
        [
            {
                "id": "1",
                "type": "Interface specification",
                "name": "Interface specification",
                "html": "<head><body><table></table><tr><td>Interface specification html template here</td></tr></body></head>"
            }
        ]

### Get document template by type [GET/doctemplates/byType/{type}]

+ Parameters

    + type: requirements
    
+ Response 200 (application/json)

        [
            {
                "id":  3,
                "type": requirements",
                "name": "Requirements",
                "html": "<head><body><table></table><tr><td>Requirements html template here</td></tr></body></head>"
            },
            {
                "id": 4,
                "type": requirements"
                "name": "Technical architecture"
                "html": "<head><body><table></table><tr><td>Technical architecture html template here</td></tr></body></head>"
            }
        ]


## Recommendation collection [/recommendations]

### Get provided recommendations [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

## Recommendation collection by document type [/recommendations?type=]

### Get provided recommendations by document type [GET]

+ Parameters

    + type: requirements
    
+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

## Document templates collection [/doctemplates?searchString=]

### Returns the list of document templates present in AMELIE [GET]

If successful, this method returns a collection of DocumentTemplate resource in the response body.

+ Request

    + Headers
    
            Authorization: Basic 12345

+ Parameters

    + searchString: Functional+Architecture    Parameter which indicates that the complete list of document templates have to be filtered based on the input 'searchstring' parameter. API returns the document templates which match the parameter. If unspecified, API returns complete list of document templates.
    
+ Response 200 (application/json)
    
        [
            {
                "id": 3,
                "keyword": "Functional Architecture",
                "name": "Arc42 Template",
                "path": "https://132.186.214.9:8443/amelie/resources/assets/Document_Templates/Functional Architecture/Arc42-Template.docx",
                "type": "docx"
            },
            {
                "id": 4,
                "keyword": "Functional Architecture",
                "name": "Architecture Documentation-IDA (Best Practice)",
                "path": "https://132.186.214.9:8443/amelie/resources/assets/Document_Templates/Functional Architecture/Architecture_Documentation-IDA.doc",
                "type": "doc"
            },
            {
                "id": 5,
                "keyword": "Functional Architecture",
                "name": "SSWA Template",
                "path": "https://132.186.214.9:8443/amelie/resources/assets/Document_Templates/Functional Architecture/SSWA-Template.doc",
                "type": "doc"
            }
        ]


## Software expertise collection [/expertise]

### Returns a collection of software expertise. [GET]

If successful, this method returns a collection of strings representing the software expertises in the response body.

+ Request

    + Headers
    
            Authorization: Basic 12345
    
+ Response 200 (application/json)

        [
            "Tests",
            "Requirements",
            "Functional Architecture",
            "Technical Architecture",
            "Tasks",
            "Business Case",
            "Implementation",
            "Default",
            "Social Skills",
            "Communication",
            "Active Listening",
            "Feedback",
            "Peer-to-peer Sparring",
            "Motivation",
            "Leading without power",
            "Intrinsic motivation",
            "Leadership",
            "SMART",
            "Patterns",
            "Half-object",
            "Iterator Pattern",
            "Batch Method Pattern",
            "Enumeration Method Pattern",
            "Combined Method Pattern",
            "Batched Iterator Pattern",
            "Pattern language",
            "Software Architecture",
            "Design",
            "Strategic Design",
            "Tactical Design",
            "Forces",
            "Architecture View",
            "Architecture Process",
            "Reference Architecture",
            "Component",
            "Architecture Approach",
            "System Scoping",
            "Domain Scoping",
            "Baseline architecture",
            "Quality feedback loop",
            "Usability",
            "Architecture Vision",
            "Design Tactics",
            "Quality attribute",
            "Quality attribute scenario",
            "Architecture View",
            "Architecture Documentation",
            "Refactoring",
            "Reengineering",
            "Rewriting",
            "Architecture smell",
            "Architecture Review",
            "Simulation",
            "Code Quality Assessment",
            "Quantitative Review",
            "Qualitative Review",
            "Active Design Review",
            "Industry Practice Review",
            "SAAM",
            "ATAM",
            "Utility Tree",
            "ISO 9126-1",
            "Volere",
            "Quality attribute",
            "NFR",
            "Non-functional requirement",
            "Kano",
            "Fishbone",
            "Utility tree",
            "Quality Attribute Workshop",
            "Requirements Engineering",
            "SysML",
            "Baselines",
            "Traceability",
            "Requirements Specification Checklist",
            "Software Testing",
            "Test exit criteria",
            "Bugs",
            "Test progress",
            "Coverage",
            "Risk-based testing",
            "Test levels",
            "Integration test",
            "System test",
            "Design for testability",
            "Logging tracing",
            "Testing tactics",
            "Test design methods",
            "Test basis",
            "Test case",
            "Dimensions of testing",
            "Test design methods poster",
            "Traceability matrix",
            "Use-case-based testing",
            "State-based testing",
            "white-box testing",
            "Unit tests",
            "Test-driven development ",
            "TDD",
            "CQM",
            "Architecture Analysis",
            "Architecture Improvement",
            "System Development ",
            "Test",
            "Architecture Quality Characteristics",
            "Test Automation Management",
            "Software Engineering",
            "Architecture Definition and Management",
            "Systems Engineering",
            "Architecture Tracking",
            "Architecture Lifecycle Management",
            "Model Driven Development",
            "Model Quality Assurance",
            "Model-Based Architecture Development",
            "Traceable Architecture Violation Management",
            "Performance Engineering for Container-based Ecosystems",
            "Agile Data Techniques",
            "Product Line Engineering",
            "Software Architecture in Dedicated Systems",
            "Development Efficiency",
            "Business Architecture Alignment",
            "User Experience Design",
            "User Interface",
            "Software Ecosystems",
            "Agile",
            "Agility ",
            "SCRUM",
            "KANBAN",
            "Dependability",
            "Dependable systems",
            "Architecture Modeling",
            "Domain specific Language",
            "DSL",
            "Data",
            "Data modeling",
            "Data analytics",
            "Cloud",
            "Design thinking",
            "Design Smells",
            "Code Audit",
            "Design Audit",
            "Design Quality Assessment",
            "Security"
        ]